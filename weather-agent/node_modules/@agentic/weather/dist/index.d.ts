import { AIFunctionsProvider } from '@agentic/core';
import { KyInstance } from 'ky';

declare namespace weatherapi {
    const BASE_URL = "https://api.weatherapi.com/v1";
    interface CurrentWeatherResponse {
        current: CurrentWeather;
        location: WeatherLocation;
    }
    interface CurrentWeather {
        cloud: number;
        condition: WeatherCondition;
        feelslike_c: number;
        feelslike_f: number;
        gust_kph: number;
        gust_mph: number;
        humidity: number;
        is_day: number;
        last_updated: string;
        last_updated_epoch: number;
        precip_in: number;
        precip_mm: number;
        pressure_in: number;
        pressure_mb: number;
        temp_c: number;
        temp_f: number;
        uv: number;
        vis_km: number;
        vis_miles: number;
        wind_degree: number;
        wind_dir: string;
        wind_kph: number;
        wind_mph: number;
    }
    interface WeatherCondition {
        code: number;
        icon: string;
        text: string;
    }
    interface WeatherLocation {
        country: string;
        lat: number;
        localtime: string;
        localtime_epoch: number;
        lon: number;
        name: string;
        region: string;
        tz_id: string;
    }
    interface WeatherIPInfoResponse {
        ip: string;
        type: string;
        continent_code: string;
        continent_name: string;
        country_code: string;
        country_name: string;
        is_eu: string;
        geoname_id: number;
        city: string;
        region: string;
        lat: number;
        lon: number;
        tz_id: string;
        localtime_epoch: number;
        localtime: string;
    }
}
/**
 * Simple Weather API client for accessing weather data based on location.
 *
 * @see https://www.weatherapi.com
 */
declare class WeatherClient extends AIFunctionsProvider {
    protected readonly ky: KyInstance;
    protected readonly apiKey: string;
    protected readonly apiBaseUrl: string;
    constructor({ apiKey, apiBaseUrl, ky }?: {
        apiKey?: string;
        apiBaseUrl?: string;
        ky?: KyInstance;
    });
    /**
     * Gets info about the current weather at a given location.
     */
    getCurrentWeather(queryOrOptions: string | {
        q: string;
    }): Promise<weatherapi.CurrentWeatherResponse>;
}

export { WeatherClient, weatherapi };
